// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtocolID.proto

#ifndef PROTOBUF_ProtocolID_2eproto__INCLUDED
#define PROTOBUF_ProtocolID_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtocolID_2eproto();
void protobuf_AssignDesc_ProtocolID_2eproto();
void protobuf_ShutdownFile_ProtocolID_2eproto();


enum ClientMsgID {
  CLIENT_MSG_LOGIN_REQ = 1000,
  CLIENT_MSG_SELECT_ROLE_REQ = 1001,
  CLIENT_MSG_CREATE_ROLE_REQ = 1002
};
bool ClientMsgID_IsValid(int value);
const ClientMsgID ClientMsgID_MIN = CLIENT_MSG_LOGIN_REQ;
const ClientMsgID ClientMsgID_MAX = CLIENT_MSG_CREATE_ROLE_REQ;
const int ClientMsgID_ARRAYSIZE = ClientMsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientMsgID_descriptor();
inline const ::std::string& ClientMsgID_Name(ClientMsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientMsgID_descriptor(), value);
}
inline bool ClientMsgID_Parse(
    const ::std::string& name, ClientMsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientMsgID>(
    ClientMsgID_descriptor(), name, value);
}
enum ServerMsgID {
  SERVER_MSG_LOGIN_RSP = 100000,
  SERVER_MSG_SELECT_ROLE_RSP = 100001,
  SERVER_MSG_CREATE_ROLE_RSP = 100002
};
bool ServerMsgID_IsValid(int value);
const ServerMsgID ServerMsgID_MIN = SERVER_MSG_LOGIN_RSP;
const ServerMsgID ServerMsgID_MAX = SERVER_MSG_CREATE_ROLE_RSP;
const int ServerMsgID_ARRAYSIZE = ServerMsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerMsgID_descriptor();
inline const ::std::string& ServerMsgID_Name(ServerMsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerMsgID_descriptor(), value);
}
inline bool ServerMsgID_Parse(
    const ::std::string& name, ServerMsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerMsgID>(
    ServerMsgID_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ClientMsgID>() {
  return ::ClientMsgID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ServerMsgID>() {
  return ::ServerMsgID_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtocolID_2eproto__INCLUDED
